syntax = "proto3";

option go_package = "github.com/jeremyhahn/go-trusted-platform/pkg-attestation/proto";
// option java_multiple_files = true;
// option java_package = "com.jeremyhahn.go-trusted-platform.attestation";
// option java_outer_classname = "AttestationProto";

package proto;


// Inseecure gRPC Attestor service
service InsecureAttestor {
  rpc GetCABundle (CABundleRequest) returns (CABundleReply) {}
}

message CABundleRequest {
  bytes bundle = 1;
}

message CABundleReply {
  bytes bundle = 1;
}

message Null {
}

// Secure, mTLS gRPC Attestor service
service TLSAttestor {
  rpc GetEKCert(Null) returns (EKCertReply) {}
  rpc GetAK(Null) returns (AKReply) {}
  rpc ActivateCredential(ActivateCredentialRequest) returns (ActivateCredentialResponse) {}
  rpc AcceptCertificate(AcceptCertificateResquest) returns (Null) {}
  rpc Quote(QuoteRequest) returns (QuoteResponse) {}
  rpc Close(Null) returns (Null) {}
}

message EKCertReply {
  bytes certificate = 1;
}

message AKReply {
  bytes EKPub              = 1;
  bytes AKName             = 2;
  bytes AKPub              = 3;
  // This field deviates from the tpm2-software procedure. The signature 
  // is required for RSA (PKCS1v15 or RSA-PSS).
  // https://tpm2-software.github.io/tpm2-tss/getting-started/2019/12/18/Remote-Attestation.html
  int32 SignatureAlgorithm = 4;
}

message ActivateCredentialRequest {
	bytes credentialBlob  = 1;
	bytes encryptedSecret = 2;
}

message ActivateCredentialResponse {
  bytes secret = 1;
}

message AcceptCertificateResquest {
  bytes certificate = 1;
}

message QuoteRequest {
  bytes nonce = 1;
  repeated int32 pcrs = 2;
}

message QuoteResponse {
  bytes quote = 1;
}
